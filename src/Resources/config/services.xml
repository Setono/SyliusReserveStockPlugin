<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <!--
            Adds a listener on kernel.terminate to keep the order.updatedAt field updated on each pageview.
            This makes sure the order never expires as long as the customer keeps browsing the shop, which
            in turns keeps the products in the cart reserved.
        -->
        <service id="Setono\SyliusReserveStockPlugin\Listener\UpdateCartOnPageviewListener">
            <argument type="service" id="sylius.context.cart" />
            <argument type="service" id="sylius.manager.order" />
            <tag name="kernel.event_listener" event="kernel.terminate" />
        </service>

        <!--
            Decorates the default availability checker, taking in account the current cart context. It should
            take this in account, so for example changes in the cart (on the cart page) should take in account
            the full amount requested without the items that were already reserved for that customer (else they
            would not be available for the same customer again).
        -->
        <service id="setono.reserve_stock_plugin.availability_checker.default" class="Setono\SyliusReserveStockPlugin\Checker\AvailabilityChecker" decorates="sylius.availability_checker.default">
            <argument type="service" id="setono.reserve_stock_plugin.availability_checker.default.inner" />
            <argument type="service" id="sylius.repository.order_item" />
            <argument>%setono_sylius_reserve_stock.ttl%</argument>
            <argument type="service" id="sylius.context.cart" />
        </service>

        <!--
            Adds a new availability checker, using an empty cart. This can be useful for example in
            templates to make sure the requested quantity can be added on top of a current cart. Therefore
            it should not exclude the current cart contents from the checks, as these items are already
            reserved.
        -->
        <service id="setono.reserve_stock_plugin.availability_checker.no_cart" class="Setono\SyliusReserveStockPlugin\Checker\AvailabilityChecker">
            <argument type="service" id="sylius.availability_checker.default" />
            <argument type="service" id="sylius.repository.order_item" />
            <argument>%setono_sylius_reserve_stock.ttl%</argument>
            <argument type="service" id="sylius.context.cart.new" />
        </service>

        <!--
            Inject the above mentioned new availability checker into the inventory template helper, to make
            sure proper availability checks are shown to the customer (is it possible to add more quantity
            on the cart).
        -->
        <service id="sylius.templating.helper.inventory" class="Sylius\Bundle\InventoryBundle\Templating\Helper\InventoryHelper">
            <argument type="service" id="setono.reserve_stock_plugin.availability_checker.no_cart" />
            <tag name="templating.helper" alias="sylius_inventory" />
        </service>
    </services>
</container>
